DOCKER_GROUP = 'cwds'
DOCKER_IMAGE = 'county-admin'
// CC_TEST_REPORTER_ID = 'e90a72f974bf96ece9ade12a041c8559fef59fd7413cfb08f1db5adc04337197'

node('cap-slave') {
  def app
    try {
      deleteDir()
      stage('Checkout') {
        checkout scm
      }
      stage('Notify SaaS') {
        sh "echo PENDING CC_TEST_REPORTER_ID"
        /*
        sh "curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter"
        sh "chmod +x ./cc-test-reporter"
        sh "./cc-test-reporter before-build --debug"
        */
      }
      stage('Build Docker Image') {
        app = docker.build("${DOCKER_GROUP}/${DOCKER_IMAGE}:${env.BUILD_ID}", "-f docker/web/Dockerfile .")
      }
      app.withRun("-e CI=true") { container ->
        stage('Lint') {
          sh "docker exec -t ${container.id} yarn lint"
          sh "docker exec -t ${container.id} bundler-audit"
          sh "docker exec -t ${container.id} brakeman"
        }
        stage('Unit Test') {
          sh "docker exec -t ${container.id} yarn test"
        }
        stage('Publish Coverage Reports') {
          /*sh "docker cp ${container.id}:/cap/coverage ./coverage"
          sh "./cc-test-reporter format-coverage -p /cap -t simplecov -o coverage/codeclimate.ruby.json coverage/ruby/.resultset.json"
          sh "./cc-test-reporter format-coverage -p /cap -t lcov -o coverage/codeclimate.javascript.json coverage/javascript/lcov.info"
          sh "./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2"
          sh "./cc-test-reporter upload-coverage -r ${CC_TEST_REPORTER_ID}"
          */
          sh "echo PENDING CC_TEST_REPORTER_ID"
        }
      }
      stage('Acceptance Test') {
        sh "docker-compose up -d --build"
        sh "sleep ${ACCEPTANCE_SLEEP_TIME}"
        sh "docker-compose exec --env COUNTY_AUTHORIZATION_ENABLED=true --env COUNTY_ADMIN_WEB_BASE_URL=county-admin-web:3000 -T county-admin-test bundle exec rspec spec/acceptance/user_list_page_spec.rb"
      }
    } catch(Exception e) {
      currentBuild.result = "FAILURE"
        throw e
    } finally {
      docker cp county-admin_county-admin-test_1:cap/tmp/capybara .
      sh "docker-compose down"
      cleanWs()
    }
}
