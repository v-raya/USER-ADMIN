version: '3.2'
services:
  perry:
    image: cwds/perry:4.0.0_1051-RC

    hostname: perry
    depends_on:
      - cals_db2_data
      - postgresql_data
    restart: on-failure
    ports:
      - ${PERRY_PORT}:8080
      - 18081:8090
    environment:
      - DEV_MODE
      - COGNITO_MODE
      - LOG_LEVEL=${LOG_LEVEL}:"INFO"
      - DB_CMS_USER
      - DB_CMS_PASSWORD
      - DB_CMS_JDBC_URL
      - DORA_URL
      - SAF_AUTH_PATH
      - SAF_CLIENT_ID
      - SAF_CLIENT_SECRET
      - SAF_LOGOUT_URI
      - SAF_RETRIEVE_TOKEN_PATH
      - SAF_REVOKE_TOKEN_URI
      - SAF_VALIDATE_TOKEN_URI
      - TOKEN_STORE_JDBC_URL
      - TOKEN_STORE_DB_USER
      - TOKEN_STORE_DB_PASSWORD
      - COGNITO_IAM_ACCESS_ID
      - COGNITO_IAM_SECRET
      - COGNITO_REGION
      - COGNITO_USERPOOL
      - IDP_MAPPING_SCRIPT
    # logging:
    #   driver: none
  cals_db2_data:
    image: cwds/db2data:0.5.6-SNAPSHOT
    hostname: cals_db2_data
    ports:
    - ${DB_CMS_DB2_PORT}:50000
  postgresql_data:
    image: cwds/postgresql_data:0.8.1_636-RC
    hostname: postgresql_data
    ports:
      - ${DB_POSTGRES_PORT}:${DB_POSTGRES_PORT}
  dora:
    image: cwds/dora:1.7.9
    command: bash -c "./entrypoint.sh 2>&1 | tee 'log.file'"
    depends_on:
      - perry
      - elasticsearch
    ports:
      - ${DORA_PORT}:8080
    environment:
      PERRY_URL: ${PERRY_URL}
      ES_NODES: ${ES_NODES}
      ES_HOST: ${ES_HOST}
      ES_POST: ${ES_PORT}
      XPACK_ENABLED: ${XPACK_ENABLED}
      SHOW_SWAGGER: ${SHOW_SWAGGER}
      PERRY_VALIDATION_URL: ${PERRY_VALIDATION_URL}
      LOGIN_URL: ${LOGIN_URL}
      LOGIN_URL: ${LOGOUT_URL}
      SWAGGER_TOKEN_URL: ${SWAGGER_TOKEN_URL}
      SWAGGER_JSON_URL: ${SWAGGER_CALLBACK_URL}
    restart: on-failure
    healthcheck:
      test: head -n 500 log.file | grep "Started @"
      interval: 5s
      timeout: 10s
      retries: 80
  elasticsearch:
    image: cwds/elasticsearch_xpack_data:1.6.5-SNAPSHOT
    depends_on:
      - perry
    ports:
      - "${ES_PORT}:9200"
    expose:
      - 9200
      - 9300
    environment:
      TOKEN_VALIDATION_URL: ${TOKEN_VALIDATION_URL}
      ELASTICSEARCH_XPACK_DATA_VERSION: ${ELASTICSEARCH_XPACK_DATA_VERSION}
  redis:
    image: 'redis:3.0'
    expose:
      - 6379
  county-admin-web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    volumes:
      - type: bind
        source: ./app
        target: /app/app
    ports:
      - ${COUNTY_ADMIN_APP_PORT}:3000
      - ${COUNTY_ADMIN_APP_WEBPACK_PORT}:3035
    environment:
      BASE_SEARCH_API_URL: ${BASE_SEARCH_API_URL}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      COUNTY_ADMIN_APP_JS_API_URL: ${COUNTY_ADMIN_APP_JS_API_URL}
      PERRY_API_BASE_URL: "http://${DEV_IP}:${PERRY_PORT}/perry"
      AUTHENTICATION: ${AUTHENTICATION}
      COUNTY_ADMIN_WEB_BASE_URL: ${COUNTY_ADMIN_WEB_BASE_URL}
      DASHBOARD_URL: ${DASHBOARD_URL}
      RAILS_RELATIVE_URL_ROOT: ${RAILS_RELATIVE_URL_ROOT}
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
    command: ['bundle', 'exec', 'rails', 'server']
    depends_on:
      - perry
      - redis
  county-admin-test:
    build:
      context: .
      dockerfile: docker/test/Dockerfile
    volumes:
      - type: bind
        source: ./spec
        target: /app/spec
      - type: bind
        source: ./tmp
        target: /app/tmp/capybara
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      PERRY_API_BASE_URL: ${PERRY_API_BASE_URL}
      COUNTY_ADMIN_WEB_BASE_URL: ${COUNTY_ADMIN_WEB_BASE_URL}
      DASHBOARD_URL: ${DASHBOARD_URL}
      RAILS_RELATIVE_URL_ROOT: ${RAILS_RELATIVE_URL_ROOT}
      DEV_MODE: ${DEV_MODE}
      TZ: ${TZ}
